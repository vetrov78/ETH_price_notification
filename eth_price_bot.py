import os
import asyncio
import requests
from telegram import Bot
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
load_dotenv("config.env")

async def send_alert(bot, current_price):
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    message = f"üö® ETH Price Alert! üö®\n–¶–µ–Ω–∞ ETH —É–ø–∞–ª–∞ –Ω–∏–∂–µ ${os.getenv('ETH_CRITICAL_PRICE')}!\n–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${current_price}"
    await bot.send_message(
        chat_id=os.getenv("CHAT_ID"),
        text=message
    )

async def main():
    bot = Bot(token=os.getenv("TELEGRAM_TOKEN"))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ü–µ–Ω—ã ETH...")
    
    while True:
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å)
            price = requests.get(
                "https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd"
            ).json()["ethereum"]["usd"]
            
            print(f"–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ ETH: ${price}")

            if price < float(os.getenv("ETH_CRITICAL_PRICE")):
                await send_alert(bot, price)
                
            await asyncio.sleep(60)  # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}")
            await asyncio.sleep(10)

if __name__ == "__main__":
    asyncio.run(main())